#!/bin/bash
XDG_CACHE_HOME=${XDG_CACHE_HOME:-$HOME/.cache}
AURDEST=${AURDEST:-$XDG_CACHE_HOME/aurutils/$argv0/sync}
AUR_LOCATION=${AUR_LOCATION:-https://aur.archlinux.org}

get_package() {
    if git ls-remote --exit-code "$AUR_LOCATION/$1"; then
        aur fetch "$1"

    elif pkgbase=$(aur query -t info "$1" | jq -er '.results[].PackageBase'); then
        aur fetch "$pkgbase"

    elif asp update "$1"; then
        asp export "$1"
    fi
}

# check for interactive terminal
if [[ -t 0 ]]; then
    cat >&2 <<EOF
Warning: Input is read from the terminal. You either know what you
Warning: are doing, or you forgot to pipe data into $argv0.
Warning: Press CTRL-D to exit.
EOF
fi

if cd "$AURDEST"; then
    while IFS=/ read -r repo pkg; do # pkgspec
        if [[ ! -d $pkg ]]; then
            # TODO: view package if it does not exist
            get_package "$pkg"
        fi

        # TODO: prompt summary of packages to rebuild before proceeding
        if cd "$AURDEST/$pkg" && [[ -f PKGBUILD ]]; then
            { read pkgver
              read pkgrel
            } < <(expac -S '%v' "$repo/$pkg" | awk -F- '{print $(NF-1) "\n" $NF}')
            pkgrel=$(bc <<< "$pkgrel + 0.1")

            if setconf PKGBUILD pkgrel "$pkgrel"; then
                aur build -d "$repo" --remove -Lsrn "$@"
            fi
        else
            printf >&2 '%s: invalid argument\n' "$pkg"
            exit 22
        fi
    done
else
    exit 1
fi
